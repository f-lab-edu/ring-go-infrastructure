version: '3.8'

services:
  # Spring Boot 애플리케이션
  app:
    image: h2jinee/ringgo:latest
    container_name: ringgo-app
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/ringgo?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password123
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - JWT_SECRET=test-jwt-secret-key-for-local-development
      - OAUTH_KAKAO_CLIENT_ID=dummy
      - OAUTH_KAKAO_CLIENT_SECRET=dummy
      - OAUTH_NAVER_CLIENT_ID=dummy
      - OAUTH_NAVER_CLIENT_SECRET=dummy
      - OAUTH_GOOGLE_CLIENT_ID=dummy
      - OAUTH_GOOGLE_CLIENT_SECRET=dummy
      - SERVER_BASE_URL=http://localhost
      - API_BASE_URL=http://localhost
    depends_on:
      - db
      - redis
    networks:
      - ringgo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL 데이터베이스
  db:
    image: mysql:8.0
    container_name: ringgo-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password123
      - MYSQL_DATABASE=ringgo
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ringgo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    container_name: ringgo-redis
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - ringgo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: ringgo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # 테스트용 자체 서명 인증서
    depends_on:
      - app
    networks:
      - ringgo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ringgo-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
